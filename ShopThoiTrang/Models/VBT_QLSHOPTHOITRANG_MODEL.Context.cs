//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopThoiTrang.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QL_SHOPTHOITRANG_DOANEntities1 : DbContext
    {
        public QL_SHOPTHOITRANG_DOANEntities1()
            : base("name=QL_SHOPTHOITRANG_DOANEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CALAMVIEC> CALAMVIEC { get; set; }
        public virtual DbSet<ChiTietDonHang> ChiTietDonHang { get; set; }
        public virtual DbSet<ChiTietSanPham> ChiTietSanPham { get; set; }
        public virtual DbSet<ChucNang> ChucNang { get; set; }
        public virtual DbSet<DanhMuc> DanhMuc { get; set; }
        public virtual DbSet<DonHang> DonHang { get; set; }
        public virtual DbSet<FeedBack> FeedBack { get; set; }
        public virtual DbSet<GioHang> GioHang { get; set; }
        public virtual DbSet<HinhAnh> HinhAnh { get; set; }
        public virtual DbSet<KichThuoc> KichThuoc { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANG { get; set; }
        public virtual DbSet<MauSac> MauSac { get; set; }
        public virtual DbSet<NhaCungCap> NhaCungCap { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIEN { get; set; }
        public virtual DbSet<OTP> OTP { get; set; }
        public virtual DbSet<PhanQuyen> PhanQuyen { get; set; }
        public virtual DbSet<SanPham> SanPham { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<VOUCHER> VOUCHER { get; set; }
    
        [DbFunction("QL_SHOPTHOITRANG_DOANEntities1", "LayDonHangTrongKhoangThoiGian")]
        public virtual IQueryable<LayDonHangTrongKhoangThoiGian_Result> LayDonHangTrongKhoangThoiGian(Nullable<System.DateTime> thoiGianBatDau, Nullable<System.DateTime> thoiGianKetThuc)
        {
            var thoiGianBatDauParameter = thoiGianBatDau.HasValue ?
                new ObjectParameter("ThoiGianBatDau", thoiGianBatDau) :
                new ObjectParameter("ThoiGianBatDau", typeof(System.DateTime));
    
            var thoiGianKetThucParameter = thoiGianKetThuc.HasValue ?
                new ObjectParameter("ThoiGianKetThuc", thoiGianKetThuc) :
                new ObjectParameter("ThoiGianKetThuc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LayDonHangTrongKhoangThoiGian_Result>("[QL_SHOPTHOITRANG_DOANEntities1].[LayDonHangTrongKhoangThoiGian](@ThoiGianBatDau, @ThoiGianKetThuc)", thoiGianBatDauParameter, thoiGianKetThucParameter);
        }
    
        [DbFunction("QL_SHOPTHOITRANG_DOANEntities1", "LayDonHangTrongKhoangThoiGianVaMaKH")]
        public virtual IQueryable<LayDonHangTrongKhoangThoiGianVaMaKH_Result> LayDonHangTrongKhoangThoiGianVaMaKH(Nullable<System.DateTime> thoiGianBatDau, Nullable<System.DateTime> thoiGianKetThuc, Nullable<int> maKhachHang)
        {
            var thoiGianBatDauParameter = thoiGianBatDau.HasValue ?
                new ObjectParameter("ThoiGianBatDau", thoiGianBatDau) :
                new ObjectParameter("ThoiGianBatDau", typeof(System.DateTime));
    
            var thoiGianKetThucParameter = thoiGianKetThuc.HasValue ?
                new ObjectParameter("ThoiGianKetThuc", thoiGianKetThuc) :
                new ObjectParameter("ThoiGianKetThuc", typeof(System.DateTime));
    
            var maKhachHangParameter = maKhachHang.HasValue ?
                new ObjectParameter("MaKhachHang", maKhachHang) :
                new ObjectParameter("MaKhachHang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LayDonHangTrongKhoangThoiGianVaMaKH_Result>("[QL_SHOPTHOITRANG_DOANEntities1].[LayDonHangTrongKhoangThoiGianVaMaKH](@ThoiGianBatDau, @ThoiGianKetThuc, @MaKhachHang)", thoiGianBatDauParameter, thoiGianKetThucParameter, maKhachHangParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
